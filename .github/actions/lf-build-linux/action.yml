name: 'Linuxfabrik: Build Linux (composite)'
description: 'Composite action to build the Linuxfabrik Monitoring Plugins an any Ubuntu-based platform'

inputs:
  compile-plugins:
    description: 'Space-separated list of check plugins to compile and package, for example "cpu-usage feed scanrootkit". Leave empty to build all plugins.'
    required: true
  target-distros:
    description: 'Space-separated list of operating systems to compile on and build packages for. Supported: `debian11 debian12 rocky8 rocky9 ubuntu2004 ubuntu2204 ubuntu2404`. Cannot be empty.'
    required: true
    default: 'debian11 debian12 rocky8 rocky9 ubuntu2004 ubuntu2204 ubuntu2404'
  package-iteration:
    description: 'The iteration number for the package (usually "1").'
    required: true
    default: '1'
  lib-repo-ref:
    description: 'The branch, tag, or SHA to checkout from the lib repo. Defaults to the current branch or tag.'
    required: true

build-runs:
  using: 'composite'
  steps:
    - name: 'Set environment variables for the build scripts'
      run: |
        echo "LFMP_ARCH=x86_64" >> $GITHUB_ENV
        echo "LFMP_COMPILE_PLUGINS=${{ inputs.compile-plugins }}" >> $GITHUB_ENV
        echo "LFMP_PACKAGE_ITERATION=${{ inputs.package-iteration }}" >> $GITHUB_ENV
        echo "LFMP_TARGET_DISTROS=${{ inputs.target-distros }}" >> $GITHUB_ENV

        echo "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV

        echo "LFMP_DIR_REPOS=$GITHUB_WORKSPACE/repos" >> $GITHUB_ENV
        echo "LFMP_DIR_COMPILED=$RUNNER_TEMP/lfmp/compiled" >> $GITHUB_ENV
        echo "LFMP_DIR_DIST=$RUNNER_TEMP/lfmp/dist" >> $GITHUB_ENV
        echo "LFMP_DIR_PACKAGED=$RUNNER_TEMP/lfmp/packaged" >> $GITHUB_ENV

    - name: 'Create working directories'
      run: |
        mkdir -p $LFMP_DIR_REPOS
        mkdir -p $LFMP_DIR_COMPILED
        mkdir -p $LFMP_DIR_DIST
        mkdir -p $LFMP_DIR_PACKAGED

    - name: 'git clone https://github.com/Linuxfabrik/THIS-REPO'
      uses: 'actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683' # v4.2.2
      with:
        path: '${{ env.LFMP_DIR_REPOS }}/monitoring-plugins'

    - name: 'git clone https://github.com/Linuxfabrik/lib'
      uses: 'actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683' # v4.2.2
      with:
        repository: 'Linuxfabrik/lib'
        ref: '${{ inputs.lib-repo-ref || github.ref_name }}'
        path: '${{ env.LFMP_DIR_REPOS }}/lib'

    - name: 'Fetch the current version from Github'
      run: >
        /bin/bash
        $LFMP_DIR_REPOS/monitoring-plugins/build/get-latest-version.sh

    - name: 'Debug'
      run: >
        /bin/bash
        $LFMP_DIR_REPOS/monitoring-plugins/build/debug.sh

    - name: 'Install podman'
      run: >
        /bin/bash
         $LFMP_DIR_REPOS/monitoring-plugins/build/install-podman.sh

    - name: 'For each distro compile the specified plugins'
      run: >
        /bin/bash
        $LFMP_DIR_REPOS/monitoring-plugins/build/matrix-compile.sh

    - name: 'Move and merge the relevant parts into $LFMP_DIR_DIST, the folder to build packages from'
      run: >
        /bin/bash
        $LFMP_DIR_REPOS/monitoring-plugins/build/merge-to-dist.sh

    - name: 'Upload the compiled plugins'
      uses: 'actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08' # v4.6.0
      with:
        path: '${{ env.LFMP_DIR_DIST }}/*'
        name: "lfmp-${{ env.LFMP_VERSION }}-${{ env.LFMP_PACKAGE_ITERATION }}.compiled.${{ env.LFMP_ARCH }}"

    - name: 'Install FPM, the packaging tool'
      run: >
        /bin/bash
        $LFMP_DIR_REPOS/monitoring-plugins/build/install-fpm.sh

    - name: 'Create the fpm files'
      run: >
        /bin/bash
        $LFMP_DIR_REPOS/monitoring-plugins/build/create-fpms.sh

    - name: 'Create the packages for every OS'
      run: >
        /bin/bash
        $LFMP_DIR_REPOS/monitoring-plugins/build/create-packages.sh

    - name: 'Upload the packages (rpm, deb, tar, zip)'
      uses: 'actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08' # v4.6.0
      with:
        path: '${{ env.LFMP_DIR_PACKAGED }}/*'
        name: "lfmp-${{ env.LFMP_VERSION }}-${{ env.LFMP_PACKAGE_ITERATION }}.packaged.${{ env.LFMP_ARCH }}"
