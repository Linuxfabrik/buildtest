name: 'Linuxfabrik: Build Windows (x86_64)'

on:
  workflow_dispatch:
    inputs:
      # lib-repo-ref:
      #   description: 'The branch, tag, or SHA to checkout from the lib repo. Defaults to the current branch or tag.'
      #   required: false
      #   default: ''
      # package-iteration:
      #   description: 'The iteration to give to the package.'
      #   required: false
      #   default: '1'
      check-plugins:
        description: 'Comma-separated list of check plugins to compile and package. Leave empty to build all plugins.'
        required: false
        default: 'cpu-usage,scanrootkit'

# modify the default permissions granted to the GITHUB_TOKEN
permissions:
  contents: 'read'

jobs:
  build-packages:
    runs-on:
      - 'windows-2025'  # https://github.com/actions/runner-images/blob/main/images/windows/Windows2025-Readme.md
    steps:
      - name: 'git checkout https://github.com/Linuxfabrik/monitoring-plugins'
        uses: 'actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683' # v4.2.2
        with:
          path: 'repos/monitoring-plugins'

      - name: 'git checkout https://github.com/Linuxfabrik/lib'
        uses: 'actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683' # v4.2.2
        with:
          repository: 'Linuxfabrik/lib'
          ref: '${{ inputs.lib-repo-ref || github.ref_name }}'
          path: 'repos/lib'

      - name: 'Debug Github Environment'
        shell: 'bash'
        run: >
          /bin/bash
          ./repos/monitoring-plugins/build/shared/debug.sh


      - name: 'Install python3.13'
        uses: 'actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38' # v5.4.0
        with:
          python-version: '3.13'

      - run: 'python.exe -m pip install --upgrade pip wheel setuptools'

      # ordered-set is for nuitka: "Nuitka:WARNING: Using very slow fallback for ordered sets, please install 'ordered-set' or 'orderedset' PyPI packages for best Python compile time performance."
      - run: 'python.exe -m pip install --upgrade ordered-set Nuitka Nuitka'

      # install 3rd party libraries for all check plugins
      - run: 'python.exe -m pip install --requirement ${{ github.workspace }}\repos\monitoring-plugins\requirements-windows.txt --require-hashes'

      - name: 'Verify Python installation'
        run: 'python.exe -m pip list'

      - name: 'Find and Download Latest Version Artifact'
        shell: 'bash'
        run: >
          /bin/bash
          ./repos/monitoring-plugins/build/shared/get-latest-version.sh
          $GITHUB_REPOSITORY
          ${{ secrets.GITHUB_TOKEN }}

      - name: 'Compile the check plugins'
        shell: 'bash'
        run: >
          /bin/bash
          ./repos/monitoring-plugins/build/shared/compile-multiple.sh
          $RUNNER_TEMP/compiled
          ./repos/lib
          ./repos/monitoring-plugins/check-plugins
          ${{ inputs.check-plugins }}

      - name: 'Merge the compiled plugins into one folder'
        shell: 'bash'
        run: >
          /bin/bash
          ./repos/monitoring-plugins/build/shared/merge-directories.sh
          $RUNNER_TEMP/compiled
          $RUNNER_TEMP/dist


      - name: 'Configuring MSBuild in the workflow PATH for building .NET Framework applications'
        uses: 'microsoft/setup-msbuild@v2'

      - name: 'Install WiX toolset'
        run: 'dotnet tool install --global wix'

      - name: 'wix --version'
        run: 'wix --version'

      - name: 'Create the .wxs file for WiX'
        shell: 'bash'
        run: >
          /bin/bash
          ./repos/monitoring-plugins/build/shared/create-wxs.sh
          $RUNNER_TEMP/lfmpx.wxs
          ${{ env.VERSION }}
          $RUNNER_TEMP\\dist

      - name: 'Compile .wxs into .msi using WiX v5+'
        run: >
          wix.exe build
          -defaultcompressionlevel high
          -out ${{ runner.temp }}\linuxfabrik-monitoring-plugins.msi
          ${{ runner.temp }}\lfmpx.wxs
        working-directory: '${{ runner.temp }}/dist'


      - name: 'Upload build output (msi)'
        uses: 'actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08' # v4.6.0
        with:
          path: '${{ runner.temp }}\linuxfabrik-monitoring-plugins.msi'
          name: "lfmp-${{ env.VERSION }}-${{ inputs.package-iteration }}.${{ runner.arch == 'X64' && 'x86_64' || 'aarch64' }}.msi"

      - name: 'Upload build output (zip)'
        uses: 'actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08' # v4.6.0
        with:
          path: '${{ runner.temp }}/dist/*'
          name: "lfmp-${{ env.VERSION }}-${{ inputs.package-iteration }}.${{ runner.arch == 'X64' && 'x86_64' || 'aarch64' }}.zip"
